<launch>

   <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find camera_stereo)/urdf/myCameraStereo.urdf"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro.py --inorder $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.07 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  
   <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find camera_stereo)/yaml/motor.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="rrbot" args="motor1_position_controller joint_state_controller"/>

  <!-- Start RViz  
  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find camera_stereo)/rviz/controller_demo.rviz"/> -->
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="cameras"  args="0 0 0 0 0 0 second_link /cameras"/>-->

</launch>